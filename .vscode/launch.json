<!DOCTYPE html><html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>CometChat WhatsApp Style</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <style>
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background-color: #ece5dd;
      padding: 0;
      margin: 0;
      display: flex;
      flex-direction: column;
      height: 100vh;
    }.chat-container {
  display: flex;
  flex-direction: column;
  max-width: 600px;
  height: 100vh;
  margin: auto;
  background-color: #fff;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
}

.chat-box {
  flex: 1;
  overflow-y: auto;
  padding: 20px;
  display: flex;
  flex-direction: column;
  gap: 12px;
  background-color: #e5ddd5;
}

.message {
  padding: 10px 15px;
  border-radius: 8px;
  max-width: 70%;
  position: relative;
  font-size: 14px;
  line-height: 1.4;
}

.sent {
  align-self: flex-end;
  background-color: #dcf8c6;
  border-radius: 8px 0 8px 8px;
}

.received {
  align-self: flex-start;
  background-color: #fff;
  border-radius: 0 8px 8px 8px;
}

.timestamp {
  display: block;
  font-size: 11px;
  color: #999;
  text-align: right;
  margin-top: 4px;
}

.input-box {
  display: flex;
  padding: 10px;
  border-top: 1px solid #ccc;
  background-color: #f0f0f0;
}

#messageInput {
  flex: 1;
  padding: 10px;
  border-radius: 20px;
  border: none;
  outline: none;
  font-size: 14px;
}

button {
  background: none;
  border: none;
  margin-left: 10px;
  font-size: 20px;
  cursor: pointer;
  color: #4caf50;
}

.date-separator {
  text-align: center;
  font-size: 12px;
  color: #999;
  margin: 10px 0;
}

  </style>
</head>
<body>
  <div class="chat-container">
    <div class="chat-box" id="chat-box">
      <!-- Messages will be appended here -->
    </div>
    <div class="input-box">
      <button id="emoji-button">ðŸ˜Š</button>
      <input type="text" id="messageInput" placeholder="Type a message...">
      <button onclick="sendMessage()"><i class="fas fa-paper-plane"><script>
  function renderMessage(message, isSentByMe) {
    const chatBox = document.getElementById("chat-box");

    const messageElem = document.createElement("div");
    messageElem.className = `message-container ${isSentByMe ? 'sent' : 'received'}`;

    const avatarUrl = message.sender?.avatar || 'https://via.placeholder.com/32';
    const name = message.sender?.name || message.sender?.uid || 'User';

    messageElem.innerHTML = `
      <img src="${avatarUrl}" class="avatar" />
      <div class="message-content">
        <p class="username">${name}</p>
        <div class="message ${isSentByMe ? 'sent' : 'received'}">
          ${message.text}
          <span class="timestamp">${new Date(message.sentAt * 1000 || Date.now()).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}</span>
        </div>
      </div>
    `;

    chatBox.appendChild(messageElem);
    chatBox.scrollTop = chatBox.scrollHeight;
  }
  function sendMessage() {
    const input = document.getElementById("messageInput");
    const messageText = input.value.trim();

    if (messageText === "") return;

    const chatBox = document.getElementById("chat-box");
    const messageElem = document.createElement("div");
    messageElem.className = "message sent";
    messageElem.innerHTML = `
      ${messageText}
      <span class="timestamp">${new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}</span>
    `;
    chatBox.appendChild(messageElem);

    input.value = "";
    chatBox.scrollTop = chatBox.scrollHeight;
  }
</script>
<body>
  <div style="padding: 20px; text-align: center;">
    <select id="userSelector">
      <option value="admin">Admin</option>
      <option value="bhavyasri">bhavyasri</option>
    </select>
    <button onclick="toggleLogin()">Login</button>
    <button onclick="logout()">Logout</button>
    <p id="loginStatus">Not logged in</p>
  </div>

  <script src="https://unpkg.com/@cometchat-pro/chat@3.0.0/CometChat.js"></script>
  <script>
    const appID = "277810bd0145cd7b";        // Replace with your actual App ID
    const region = "in";       // Replace with your region (e.g., "us")
    const authKey = "f1a8d1a3e77b73be9d133835caa7ed7d62cf04ce";    // Replace with your Auth Key

    const users = {
      admin: "admin",   // Replace with actual Admin UID
      bhavyasri: "bhavyasri"    // Replace with actual User UID
    };

    CometChat.init(appID, new CometChat.AppSettingsBuilder()
      .subscribePresenceForAllUsers()
      .setRegion(region)
      .build()).then(() => {
        console.log("CometChat initialized");
      }).catch(error => {
        console.error("Initialization failed", error);
      });

    function toggleLogin() {
      const selected = document.getElementById("userSelector").value;
      const uid = users[selected];

      CometChat.login(uid, authKey).then(
        user => {
          document.getElementById("loginStatus").textContent = 'Logged in as ${user.name || user.uid}';
          console.log("Login successful:", user);
        },
        error => {
          console.error("Login failed:", error);
          alert("Login failed: " + error.message);
        }
      );
    }

    function logout() {
      CometChat.logout().then(
        () => {
          document.getElementById("loginStatus").textContent = "Not logged in";
          console.log("Logged out successfully");
        },
        error => {
          console.error("Logout failed", error);
        }
      );
    }
  </script>
</body>
</html>
